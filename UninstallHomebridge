#!/bin/bash

homeDir=${HOME}
defaultBackupPath=${HOME}/homebridgeBackup
pathToConfig="/var/lib/homebridge"

echo "Uninstalling Homebridge and every dependencies? (Y/N)"
read uninstall
if [ "$uninstall" == "Y" -o "$uninstall" == "y" ] 
then 
	echo "Stopping Homebridge Service"
	sudo hb-service uninstall
	echo "Uninstall Homebridge Plugins"
	sudo npm uninstall -g homebridge-*
	echo "Uninstall homebridge"
	sudo npm uninstall -g homebridge homebridge-config-ui-x
	echo "Uninstall npm"
	sudo npm uninstall -g npm
	echo "Do you want to save your current config.json as a Backup? (Y/N)"
	read backupConfig
	if [ "$backupConfig" == "Y" -o "$backupConfig" == "y" ]
	then 
		echo "This config.json will be backed up if you confirm"
		sudo jq '.' $pathToConfig/config.json
		read -p "Save this config.json? (Y/N)"		
		echo "Where do you want to store your backup? Please provide a absolute Path (/home/pi/Documents/backup e.g.)"
		echo "If you provide no Path the default path ($defaultBackupPath) will be used"
		read backupPath
		if [ "$backupPath" != "" ]
		then 
			echo "Copying your config.json to $backupPath"
			if [ -e $backupPath ];
			then
				sudo cp $pathToConfig/config.json $backupPath/$(date +%Y-%m-%d_%H-%M-%S)_config.json.bak
			else
				sudo mkdir -p $backupPath
				sudo chmod 0777 $backupPath
				sudo cp $pathToConfig/config.json $backupPath/$(date +%Y-%m-%d_%H-%M-%S)_config.json.bak
			fi
		else
			echo "Copying your config.json to $defaultBackupPath"
			if [ -e $defaultBackupPath ];
			then
				sudo cp $pathToConfig/config.json $defaultBackupPath/$(date +%Y-%m-%d_%H-%M-%S)_config.json.bak
			else 
				sudo mkdir -p $defaultBackupPath
				sudo chmod 0777 $defaultBackupPath
				sudo cp $pathToConfig/config.json $defaultBackupPath/$(date +%Y-%m-%d_%H-%M-%S)_config.json.bak
			fi
		fi
	fi
	
	sudo rm $pathToConfig -r
	echo "Uninstall nodejs"
	sudo apt-get purge nodejs gcc g++ make python -y

	echo "Cleaning up old stuff"
	sudo apt-get autoremove -y
	sudo apt-get autoclean -y
	echo "Uninstall complete"
	echo "Do you want to reboot your Raspberry Pi? (Y/N)"
	read rebootNow
	if [ "$rebootNow" == "Y" -o "$rebootNow" == "y" ]
	then
		echo "Rebooting your Raspberry Pi in a few seconds..."
		sleep 10
		sudo reboot
	fi
else
	echo "No Uninstall selected"
fi
read -p "Press any Key to exit the script" exit